#!/usr/bin/python3 -u

import argparse
import os
import signal
import threading

import heal


def is_directory(value):
    if not os.path.isdir(value):
        raise argparse.ArgumentTypeError("not a directory")
    return value


def is_writable(value):
    try:
        open(value, "w").close()
    except IOError:
        raise argparse.ArgumentTypeError("not a writable file")
    return value


argparser = argparse.ArgumentParser(description="Minimalist self-healing.")
argparser.add_argument("-c", "--configuration-directory", default="/etc/heal.conf.d", type=is_directory, help="path to the yaml or json configuration directory (default: /etc/heal.conf.d)")
argparser.add_argument("-s", "--status-file", default="/var/tmp/status.json", type=is_writable, help="path to the output status file (default: /var/tmp/status.json)")
args = argparser.parse_args()


# handles signals properly
def shutdown(signum, frame):
    print("exit")
    [thread.stop.set() for thread in threading.enumerate() if isinstance(thread, heal.LoopThread)]


for sig in [signal.SIGINT, signal.SIGTERM]:
    signal.signal(sig, shutdown)

heal.MasterThread(args.configuration_directory, args.status_file).start()
