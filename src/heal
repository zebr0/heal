#!/usr/bin/python3 -u

import argparse
import datetime
import json
import os.path
import subprocess
import sys

import yaml


def write_output(status):
    with open(args.output, "w") as output:
        json.dump({
            "utc": datetime.datetime.utcnow().isoformat(),
            "status": status
        }, output, indent=2)


def execute(command):
    return subprocess.Popen(command, shell=True, stdout=sys.stdout, stderr=sys.stderr).wait() == 0


argparser = argparse.ArgumentParser(description="Minimalist self-healing.")
argparser.add_argument("-d", "--directory", default="/etc/heal.conf.d", help="path to the yaml or json configuration directory (default: /etc/heal.conf.d)")
argparser.add_argument("-o", "--output", default="/var/tmp/status.json", help="path to the output status file (default: /var/tmp/status.json)")
args = argparser.parse_args()

if os.path.isdir(args.directory):
    for filename in sorted(os.listdir(args.directory)):
        with open(os.path.join(args.directory, filename)) as file:
            for step in yaml.load(file, Loader=yaml.BaseLoader):  # uses the yaml baseloader to preserve all strings
                if not execute(step.get("test")):
                    write_output("fixing")
                    if not execute(step.get("fix")) or not execute(step.get("test")):
                        write_output("ko")
                        exit(1)

write_output("ok")
